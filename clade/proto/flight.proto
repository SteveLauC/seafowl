syntax = "proto3";

package clade.flight;

message DoPutCommand {
  enum CommandType {
    // Protobuf pattern, not used
    UNKNOWN = 0;

    // Data: updated or inserted rows. If a column is omitted,
    // this assumes it's unchanged.
    UPSERT = 1;

    // Data: columns forming the primary keys / replica identity
    // of the deleted rows.
    DELETE = 2;
  }

  CommandType type = 1;

  // TODO: Table ref or URL of the Delta Table?
  string table = 2;

  // Primary key columns
  repeated string pk_column = 3;

  // Opaque string identifying PGD origin
  optional string origin = 4;

  // Monotonically-increasing transaction number (e.g. an LSN)
  optional uint64 sequence_number = 5;
}

message DoPutResult {
  enum AckType {
    UNKNOWN = 0;

    // Seafowl is overloaded and can't accept the change (e.g.
    // can't flush fast enough). The client should wait and retry.
    // TODO: we can block when receiving FlightData instead?
    BACKPRESSURE = 1;

    // Change acknowledged and is in-memory. Will get lost if
    // the Seafowl instance is restarted
    MEMORY = 2;

    // Change, and all changes from this origin, has been flushed
    // to durable storage (i.e. Delta Lake).
    DURABLE = 3;
  }

  AckType type = 1;
}


